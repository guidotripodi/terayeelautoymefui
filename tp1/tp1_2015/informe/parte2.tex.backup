
\subsection{Ejercicios}
\begin{itemize}
 \item 
\textbf{Ejercicio 3}  Completar la implementacion del scheduler Round-Robin implementando los
metodos de la clase SchedRR en los archivos sched rr.cpp y sched rr.h. La implementacion
recibe como primer parametro la cantidad de nucleos y a continuacion los valores de sus
respectivos quantums. Debe utilizar una unica cola global, permitiendo ası la migracion de
procesos entre nucleos.
\item \textbf{Ejercicio 4} Diseñar uno o mas lotes de tareas para ejecutar con el algoritmo del ejercicio
anterior. Graficar las simulaciones y comentarlas, justificando brevemente por que el comportamiento 
observado es efectivamente el esperable de un algoritmo Round-Robin.
\item \textbf{Ejercicio 5} A partir del articulo:\\
\begin{itemize}
 \item Liu, Chung Laung, and James W. Layland. Scheduling algorithms for multiprogramming
in a hard-real-time environment. Journal of the ACM (JACM) 20.1 (1973): 46-61.
\end{itemize}
1. Responda:
\begin{enumerate}
 \item ¿Que problema estan intentando resolver los autores?
 \item ¿Por que introducen el algoritmo de la seccion 7? ¿Que problema buscan resolver
con esto?
\item Explicar coloquialmente el significado del teorema 7.
\end{enumerate}
2. Disenar e implementar un scheduler basado en prioridades fijas y otro en prioridades
dinamicas. Para eso complete las clases $SchedFixed$ y $SchedDynamic$ que se encuentran
en los archivos $sched$\_$fixed.[h|cpp]$ y $sched$\_$dynamic.[h|cpp]$ respectivamente.
\end{itemize}


\subsection{Resultados y Conclusiones}

\subsubsection[Resolución Ejercicio 3]{Ejercicio 3}
Para desarrollar la implementacion del scheduler $Round-Robin$ y que este funcione de una forma correcta
utilizamos una serie de estructuras puntuales. \\
Las mismas son las siguientes:\\
\begin{enumerate}
 \item 
\end{enumerate}

\subsubsection[Resolución Ejercicio 4]{Ejercicio 4}

\subsubsection[Resolución Ejercicio 5]{Ejercicio 5}
